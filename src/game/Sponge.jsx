/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/sponge.glb -o src/components/Sponge.jsx -k -K -r public 
Author: SMF Features Developed From Cheryl Hill (https://sketchfab.com/cherylhill28)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/tssm-spongebob-animation-pack-3404f603ad8b438ebd87c1c779784431
Title: TSSM - SpongeBob Animation Pack
*/

import React, { useEffect, useRef } from 'react'
import { useFrame, useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations,Text } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Sponge({
    name="Player",
    animation="unnamed.001|spongebob_idle01.anm",
  ...props

}) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/sponge.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
        actions[animation]?.reset().fadeIn(0.24).play();
        return () => actions?.[animation]?.fadeOut(0.24);
      }, [animation]);

       const textRef = useRef();

         useFrame(({ camera }) => {
           if (textRef.current) {
             textRef.current.lookAt(camera.position);
           }});

  return (
    <group ref={group} {...props} dispose={null}>

 <group ref={textRef}>
<Text
    position-y={3.8}
    fontSize={0.5}
    anchorX="center"
    anchorY="middle"
    font="fonts/PaytoneOne-Regular.ttf"
  >
    {name}
    <meshBasicMaterial color="white" />
  </Text>
  <Text
    position-y={3.78}
    position-x={0.02}
    position-z={-0.02}
    fontSize={0.5}
    anchorX="center"
    anchorY="middle"
    font="fonts/PaytoneOne-Regular.ttf"
  >
    {name}
    <meshBasicMaterial color="black" />
  </Text>
</group>

      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model">
          <group name="SpongeBob_Animation_01fbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Light" position={[407.625, 590.386, -100.545]} rotation={[1.89, 0.881, -2.045]} scale={100}>
                  <group name="Object_5" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_6" />
                  </group>
                </group>
                <group name="Camera" position={[735.889, 495.831, 692.579]} rotation={[-Math.PI, 0.756, 2.68]} scale={100}>
                  <group name="Object_8" />
                </group>
                <group name="mesh004" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="unnamed" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <group name="unnamed001">
                    <group name="Object_12">
                      <primitive object={nodes._rootJoint} />
                      <group name="Object_14" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                      <skinnedMesh name="Object_15" geometry={nodes.Object_15.geometry} material={materials['unnamed.0']} skeleton={nodes.Object_15.skeleton} />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/sponge.glb')
